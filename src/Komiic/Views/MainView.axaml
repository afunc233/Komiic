<UserControl
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d"
    x:Class="Komiic.Views.MainView"
    x:DataType="vm:MainViewModel"
    xmlns="https://github.com/avaloniaui"
    xmlns:controls="clr-namespace:Komiic.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:navEnums="clr-namespace:Komiic.PageViewModels"
    xmlns:materialIcon="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
    xmlns:materialEnums="clr-namespace:Material.Icons;assembly=Material.Icons"
    xmlns:vm="clr-namespace:Komiic.ViewModels"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <UserControl.DataTemplates>
        <DataTemplate DataType="{x:Type vm:NavBar}">
            <StackPanel Orientation="Horizontal">
                <materialIcon:MaterialIcon x:Name="Icon"
                                           Height="28"
                                           Opacity="0.4"
                                           Width="28" Kind="Abacus" />
                <TextBlock
                    FontSize="16"
                    Margin="10,0,0,0"
                    Text="{Binding BarName}"
                    VerticalAlignment="Center" />
                <Interaction.Behaviors>
                    <DataTriggerBehavior Binding="{Binding NavType}" Value="{x:Static navEnums:NavBarType.Main}">
                        <ChangePropertyAction TargetObject="Icon" PropertyName="Kind"
                                              Value="{x:Static materialEnums:MaterialIconKind.Home}" />
                    </DataTriggerBehavior>
                    <DataTriggerBehavior Binding="{Binding NavType}" ComparisonCondition="Equal"
                                         Value="{x:Static navEnums:NavBarType.RecentUpdate}">
                        <ChangePropertyAction TargetObject="Icon" PropertyName="Kind"
                                              Value="Update" />
                    </DataTriggerBehavior>
                    <DataTriggerBehavior Binding="{Binding NavType}" ComparisonCondition="Equal"
                                         Value="{x:Static navEnums:NavBarType.Hot}">
                        <ChangePropertyAction TargetObject="Icon" PropertyName="Kind"
                                              Value="{x:Static materialEnums:MaterialIconKind.Fire}" />
                    </DataTriggerBehavior>
                    <DataTriggerBehavior Binding="{Binding NavType}" ComparisonCondition="Equal"
                                         Value="{x:Static navEnums:NavBarType.AllManga}">
                        <ChangePropertyAction TargetObject="Icon" PropertyName="Kind"
                                              Value="{x:Static materialEnums:MaterialIconKind.Library}" />
                    </DataTriggerBehavior>
                    <DataTriggerBehavior Binding="{Binding NavType}" ComparisonCondition="Equal"
                                         Value="{x:Static navEnums:NavBarType.Authors}">
                        <ChangePropertyAction TargetObject="Icon" PropertyName="Kind"
                                              Value="{x:Static materialEnums:MaterialIconKind.AccountBox}" />
                    </DataTriggerBehavior>
                    <DataTriggerBehavior Binding="{Binding NavType}" ComparisonCondition="Equal"
                                         Value="{x:Static navEnums:NavBarType.About}">
                        <ChangePropertyAction TargetObject="Icon" PropertyName="Kind"
                                              Value="{x:Static materialEnums:MaterialIconKind.About}" />
                    </DataTriggerBehavior>

                    <DataTriggerBehavior Binding="{Binding $parent[ListBoxItem].IsSelected}" Value="True">
                        <ChangePropertyAction TargetObject="Icon" PropertyName="Opacity"
                                              Value="0.8" />
                    </DataTriggerBehavior>
                    <DataTriggerBehavior Binding="{Binding $parent[ListBoxItem].IsSelected}" Value="False">
                        <ChangePropertyAction TargetObject="Icon" PropertyName="Opacity"
                                              Value="0.4" />
                    </DataTriggerBehavior>
                </Interaction.Behaviors>
            </StackPanel>
        </DataTemplate>
    </UserControl.DataTemplates>
    <Panel>
        <DockPanel>
            <!--  标题部分  -->
            <Panel
                DockPanel.Dock="Top"
                Height="38"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Top"
                x:Name="TitleBarPanel">
                <Border
                    Background="Transparent"
                    BoxShadow="{DynamicResource BorderBoxShadow}"
                    DoubleTapped="InputElement_OnDoubleTapped"
                    HorizontalAlignment="Stretch"
                    PointerPressed="InputElement_OnPointerPressed" />
                <DockPanel Margin="3">
                    <ToggleButton DockPanel.Dock="Left" IsChecked="{Binding #MainSplitView.IsPaneOpen}">
                        <materialIcon:MaterialIcon Width="28" Height="28"
                                                   Kind="{x:Static materialEnums:MaterialIconKind.Menu}" />
                    </ToggleButton>
                    <CaptionButtons
                        DockPanel.Dock="Right"
                        IsVisible="{OnFormFactor Default=True,
                                                 Mobile=False}"
                        x:Name="CaptionButtons">
                        <CaptionButtons.Styles>
                            <Style Selector="CaptionButtons">
                                <Style Selector="^:normal /template/ Button#PART_FullScreenButton">
                                    <Setter Property="IsVisible" Value="True" />
                                </Style>
                                <Style Selector="^:maximized /template/ Button#PART_FullScreenButton">
                                    <Setter Property="IsVisible" Value="True" />
                                </Style>
                                <Style Selector="^:fullscreen /template/ Button#PART_FullScreenButton">
                                    <Setter Property="IsVisible" Value="True" />
                                </Style>
                            </Style>
                        </CaptionButtons.Styles>
                    </CaptionButtons>
                    <ContentControl Content="{Binding Header}" />
                </DockPanel>
            </Panel>
            <!--  标题部分 结束  -->

            <SplitView
                CompactPaneLength="{OnFormFactor Default=48,
                                                 Mobile=48}"
                DisplayMode="{OnFormFactor Mobile=Overlay,
                                           Default=CompactInline}"
                IsPaneOpen="{OnFormFactor Default=True,
                                          Mobile=False,
                                          Desktop=False}"
                OpenPaneLength="160"
                x:Name="MainSplitView">
                <SplitView.Pane>
                    <DockPanel controls:DirectionalKeyDownHandler.Handled="True">
                        <ListBox
                            DockPanel.Dock="Bottom"
                            ItemsSource="{Binding FooterMenuItemsSource}"
                            SelectedItem="{Binding SelectedNavBar}" />
                        <ListBox ItemsSource="{Binding MenuItemsSource}" SelectedItem="{Binding SelectedNavBar}" />
                    </DockPanel>
                </SplitView.Pane>
                <TransitioningContentControl
                    Content="{Binding SelectedContent}"
                    HorizontalAlignment="Stretch"
                    HorizontalContentAlignment="Stretch"
                    IsTransitionReversed="{Binding IsTransitionReversed}">
                    <TransitioningContentControl.PageTransition>
                        <CompositePageTransition>
                            <CompositePageTransition.PageTransitions>
                                <PageSlide Duration="0:0:2" Orientation="Vertical" />
                            </CompositePageTransition.PageTransitions>
                        </CompositePageTransition>
                    </TransitioningContentControl.PageTransition>
                </TransitioningContentControl>
            </SplitView>

        </DockPanel>

        <ProgressBar
            HorizontalAlignment="Center"
            IsHitTestVisible="False"
            IsIndeterminate="{Binding SelectedContent.IsLoading, FallbackValue=False}"
            IsVisible="{Binding SelectedContent.IsLoading, FallbackValue=False}"
            VerticalAlignment="Center"
            Width="200" />

        <controls:DialogHost
            CloseOnClickAway="True"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            x:Name="MainDialogHost" />
    </Panel>
</UserControl>